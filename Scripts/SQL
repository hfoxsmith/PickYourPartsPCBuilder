CREATE TABLE PSU
(
  psuID SERIAL NOT NULL,
  color VARCHAR NOT NULL,
  efficiencyRating VARCHAR NOT NULL,
  isModular INT NOT NULL,
  watts INT NOT NULL,
  brandName VARCHAR NOT NULL,
  price NUMERIC NOT NULL,
  imgURL VARCHAR NOT NULL,
  modelNamePSU VARCHAR NOT NULL,
  PRIMARY KEY (psuID)
);

CREATE TABLE USERS
(
  userID SERIAL NOT NULL,
  isAdmin INT NOT NULL,
  phoneNumber INT NOT NULL,
  email VARCHAR NOT NULL,
  password VARCHAR NOT NULL,
  userName VARCHAR NOT NULL,
  lastName VARCHAR NOT NULL,
  firstName VARCHAR NOT NULL,
  PRIMARY KEY (userID),
  UNIQUE (userName)
);

CREATE TABLE COOLING
(
  coolingID SERIAL NOT NULL,
  coolingType VARCHAR NOT NULL,
  hasRGB INT,
  size VARCHAR NOT NULL,
  fanConnectorType VARCHAR,
  brandName VARCHAR NOT NULL,
  price NUMERIC NOT NULL,
  color VARCHAR NOT NULL,
  modelNameCOOL VARCHAR NOT NULL,
  imgURL VARCHAR NOT NULL,
  numFans INT,
  PRIMARY KEY (coolingID)
);

CREATE TABLE STORAGE
(
  storageID SERIAL NOT NULL,
  price NUMERIC NOT NULL,
  storageType VARCHAR NOT NULL,
  formFactor VARCHAR NOT NULL,
  connectorType VARCHAR NOT NULL,
  storageAmount INT NOT NULL,
  modelNameHDD VARCHAR NOT NULL,
  imgURL VARCHAR NOT NULL,
  theoreticalSpeed VARCHAR NOT NULL,
  brandName VARCHAR NOT NULL,
  PRIMARY KEY (storageID)
);

CREATE TABLE PROCESSOR
(
  numCores INT NOT NULL,
  isMultiThreaded INT NOT NULL,
  clockSpeed NUMERIC NOT NULL,
  socketType VARCHAR NOT NULL,
  price NUMERIC NOT NULL,
  modelNameCPU VARCHAR NOT NULL,
  imgURL VARCHAR NOT NULL,
  brandName VARCHAR NOT NULL,
  cpuID SERIAL NOT NULL,
  PRIMARY KEY (cpuID)
);

CREATE TABLE MOTHERBOARD
(
  motherboardID SERIAL NOT NULL,
  formFactor VARCHAR NOT NULL,
  modelNameMB VARCHAR NOT NULL,
  imgURL VARCHAR NOT NULL,
  socketType VARCHAR NOT NULL,
  numRamSlots INT NOT NULL,
  hasHdmi INT NOT NULL,
  numUsbPorts INT NOT NULL,
  pcieGeneration VARCHAR NOT NULL,
  price NUMERIC NOT NULL,
  pcbColor VARCHAR NOT NULL,
  brandName VARCHAR NOT NULL,
  numSockets INT NOT NULL,
  ramTYPE VARCHAR NOT NULL,
  hasRGB INT,
  numVideoPorts INT NOT NULL,
  numSataPorts INT NOT NULL,
  numM2Ports INT,
  PRIMARY KEY (motherboardID)
);

CREATE TABLE RAM
(
  ramID SERIAL NOT NULL,
  brandName VARCHAR NOT NULL,
  ramType VARCHAR NOT NULL,
  ramSpeed VARCHAR NOT NULL,
  price NUMERIC NOT NULL,
  modelNameRAM VARCHAR NOT NULL,
  imgURL VARCHAR NOT NULL,
  storagePerStick INT NOT NULL,
  pcbColor CHAR NOT NULL,
  hasRGB INT,
  laptopOrDekstop INT NOT NULL,
  PRIMARY KEY (ramID)
);

CREATE TABLE PC_CASE
(
  caseID SERIAL NOT NULL,
  hasRGB INT,
  supportedMBFormFactor VARCHAR NOT NULL,
  hasTemperedGlass INT NOT NULL,
  hasDustFilters INT NOT NULL,
  price NUMERIC NOT NULL,
  color VARCHAR NOT NULL,
  modelNameCASE VARCHAR NOT NULL,
  imgURL VARCHAR NOT NULL,
  numFansIncluded INT NOT NULL,
  brandName VARCHAR NOT NULL,
  PRIMARY KEY (caseID)
);

CREATE TABLE GPU
(
  gpuID SERIAL NOT NULL,
  brandName VARCHAR NOT NULL,
  vramAmount INT NOT NULL,
  modelNameGPU VARCHAR NOT NULL,
  imgURL VARCHAR NOT NULL,
  color VARCHAR NOT NULL,
  hasRGB INT,
  gpuLength NUMERIC NOT NULL,
  gpuHeight NUMERIC NOT NULL,
  numDisplaysSupported INT NOT NULL,
  PRIMARY KEY (gpuID)
);

CREATE TABLE storageCompatibility
(
  motherboardID INT NOT NULL,
  storageID INT NOT NULL,
  PRIMARY KEY (motherboardID, storageID),
  FOREIGN KEY (motherboardID) REFERENCES MOTHERBOARD(motherboardID),
  FOREIGN KEY (storageID) REFERENCES STORAGE(storageID)
);

CREATE TABLE cpuCompatibility
(
  motherboardID INT NOT NULL,
  cpuID INT NOT NULL,
  PRIMARY KEY (motherboardID, cpuID),
  FOREIGN KEY (motherboardID) REFERENCES MOTHERBOARD(motherboardID),
  FOREIGN KEY (cpuID) REFERENCES PROCESSOR(cpuID)
);

CREATE TABLE ramCompatibility
(
  motherboardID INT NOT NULL,
  ramID INT NOT NULL,
  PRIMARY KEY (motherboardID, ramID),
  FOREIGN KEY (motherboardID) REFERENCES MOTHERBOARD(motherboardID),
  FOREIGN KEY (ramID) REFERENCES RAM(ramID)
);

CREATE TABLE caseCompatibility
(
  caseID INT NOT NULL,
  motherboardID INT NOT NULL,
  PRIMARY KEY (caseID, motherboardID),
  FOREIGN KEY (caseID) REFERENCES PC_CASE(caseID),
  FOREIGN KEY (motherboardID) REFERENCES MOTHERBOARD(motherboardID)
);

CREATE TABLE PROCESSOR_compatableRAM
(
  compatableRAM INT NOT NULL,
  cpuID INT NOT NULL,
  PRIMARY KEY (compatableRAM, cpuID),
  FOREIGN KEY (cpuID) REFERENCES PROCESSOR(cpuID)
);

CREATE TABLE PC_CASE_frontPanelPorts
(
  frontPanelPorts INT NOT NULL,
  caseID INT NOT NULL,
  PRIMARY KEY (frontPanelPorts, caseID),
  FOREIGN KEY (caseID) REFERENCES PC_CASE(caseID)
);

CREATE TABLE SAVED_PC_BUILDS
(
  buildID SERIAL NOT NULL,
  totalPrice NUMERIC NOT NULL,
  userID INT NOT NULL,
  cpuID INT NOT NULL,
  caseID INT NOT NULL,
  psuID INT NOT NULL,
  motherboardID INT NOT NULL,
  PRIMARY KEY (buildID),
  FOREIGN KEY (userID) REFERENCES USERS(userID),
  FOREIGN KEY (cpuID) REFERENCES PROCESSOR(cpuID),
  FOREIGN KEY (caseID) REFERENCES PC_CASE(caseID),
  FOREIGN KEY (psuID) REFERENCES PSU(psuID),
  FOREIGN KEY (motherboardID) REFERENCES MOTHERBOARD(motherboardID)
);

CREATE TABLE hasRam
(
  ramID INT NOT NULL,
  buildID INT NOT NULL,
  PRIMARY KEY (ramID, buildID),
  FOREIGN KEY (ramID) REFERENCES RAM(ramID),
  FOREIGN KEY (buildID) REFERENCES SAVED_PC_BUILDS(buildID)
);

CREATE TABLE hasCooling
(
  coolingID INT NOT NULL,
  buildID INT NOT NULL,
  PRIMARY KEY (coolingID, buildID),
  FOREIGN KEY (coolingID) REFERENCES COOLING(coolingID),
  FOREIGN KEY (buildID) REFERENCES SAVED_PC_BUILDS(buildID)
);

CREATE TABLE hasStorage
(
  storageID INT NOT NULL,
  buildID INT NOT NULL,
  PRIMARY KEY (storageID, buildID),
  FOREIGN KEY (storageID) REFERENCES STORAGE(storageID),
  FOREIGN KEY (buildID) REFERENCES SAVED_PC_BUILDS(buildID)
);

CREATE TABLE hasGPU
(
  gpuID INT NOT NULL,
  buildID INT NOT NULL,
  PRIMARY KEY (gpuID, buildID),
  FOREIGN KEY (gpuID) REFERENCES GPU(gpuID),
  FOREIGN KEY (buildID) REFERENCES SAVED_PC_BUILDS(buildID)
);
